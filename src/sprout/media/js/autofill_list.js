$(document).ready(function() {
    $('.autofill-wrap').each(function() {
        var index = 0;
        var $self = $(this);
        var $list = $self.find('.autofill-list');
        var opts = JSON.parse($self.find('.autofill-list-opts').text());


        /**
         * Show an empty message if there are no items in the list.
         */
        function emptyMessage() {
            if ($list.children('p').length == 0) {
                var $empty = $('<div class="autofill-empty"></div>');
                $empty.text('This list is empty. Use the field above to add ' + opts.single + ' to this list.');
                $list.append($empty);
            } else {
                $list.find('.autofill-empty').remove();
            }
        }


        /**
         * Dynamically creates delete buttons on all the items in an autofill list
         */
        function deleteButtons() {
            var $p, $span;

            var actions = '<span class="autofill-actions">';
            if (opts.reorder) actions += '<button title="Reorder" class="autofill-reorder autofill-button icon-before icon-open_with" type="button">Reorder</button>';
            actions += '<button title="Remove" class="autofill-remove autofill-button icon-before icon-close" type="button">Remove</button>';
            actions += '</span>';

            $list.find('p').each(function() {
                if ($(this).find('span.autofill-actions').length == 0) {
                    $span = $(this).append(actions);
                    $span.find('button.autofill-remove').click(function() {
                        $p = $(this).parent().parent().remove();
                        emptyMessage();
                    });
                }
            });
        }


        /**
         * Adds an item to a list of items generated by an autofill dropdown
         *
         * @param object data A hash with the data for the new item, containing at
         *        least the keys 'value', 'id', and 'orderkey'
         */
        function addItem(data) {
            var orderkey;

            // Existing items (with an orderkey) will be in-order, new items will be at the top
            orderkey = data.orderkey || 0;

            var $p = $('<p></p>');
            $p.append(data.value);
            $p.attr('data-ord', orderkey);

            // Need an INPUT for each data field so that session reloading works
            $.each(data, function(key, val) {
                var $input = $('<input></input>');
                $input.attr('type', 'hidden');
                $input.attr('name', opts.name + '[' + index + '][' + key + ']');
                $input.attr('value', val);
                $p.append($input);
            });

            var $insert_before = false;
            var min_order = 9999999999;
            $list.find('p').each(function() {
                var elem_order = $(this).attr('data-ord');

                if (elem_order < min_order && orderkey < elem_order) {
                    $insert_before = $(this);
                    min_order = elem_order;
                }
            });

            if ($insert_before) {
                $insert_before.before($p);
            } else if (orderkey) {
                $list.append($p);
            } else {
                $list.prepend($p);
            }

            deleteButtons();
            emptyMessage();
            index++;
        }


        /**
         * Set up the auto-fill list
         */
        function init() {
            var $search = $self.find('.autofill-search input[type="text"]').first();
            var data = JSON.parse($self.find('.autofill-list-data').text());

            $search.autocomplete({
                source: opts.lookup_url,
                minLength: opts.min_term_length || 3,
                select: function(event, ui) {
                    delete ui.item.label;       // Injected by autocomplete library, but unwanted.
                    addItem(ui.item);
                    window.setTimeout(function(){  $search.val('');  }, 5);
                }
            });

            $.each(data, function() {
                addItem(this);
            });

            deleteButtons();
            emptyMessage();

            if (opts.reorder) {
                $list.sortable({
                    placeholder: 'autofill-reorder-highlight',
                    handle: '.autofill-reorder',
                    cancel: ''
                });
            }
        }


        init();
    });
});
